#include <iostream>
#include <windows.h>
#include <conio.h>
#include <string>

using namespace std ;

/*void cin_clear ( string line , string error = "No character or a negative value !" )

{
	
	cout << error ;
	Sleep (2000) ;
	system("CLS") ;
	cin.clear () ;
	cin.ignore ( INT_MAX , '\n' ) ;
	cout << line ;

}*/

void cin_clear ( string error = "No character or a negative value !" )

{

	cout << error ;
	Sleep (2000) ;
	system("CLS") ;
	cin.clear () ;
	cin.ignore ( INT_MAX , '\n' ) ;

}

int continuationLoop ()

{
	
	cout << endl ;
	system("pause") ;
	
	bool check = true , flag = true ;
	
	char option ;
	
	while ( check )
			
			{
					
				system("CLS") ;
				
				cout << "Do you want to continue (y/n) : " ;
			
				option = getch() ;
				
				if ( option == 'y' )
				
				{
					
					system ("CLS") ;
					
					return 1 ;
				
				}
				
				else if ( option == 'n' )
				
				{
					
					return 0 ;
						
				}
				
				

			}
	
}
template <typename datatype>
datatype insertionSort ( datatype array[] , int starting_index , int ending_index )

{
	
	if ( ending_index < 1 )
		return 0 ;
	
	else if ( starting_index <= ending_index )

	{
		datatype value = array [starting_index] ;
		int j = starting_index ;
		while ( j > 0 && value < array [j-1] )
		{
			array [j] = array [j-1] ;
			j-- ;
		}
		array [j] = value ;
		
		return insertionSort ( array , starting_index + 1 , ending_index ) ;
	}
}

template <typename datatype>

datatype insertionSort_decending ( datatype array[] , int starting_index , int ending_index )

{
	
	if ( starting_index <= ending_index )

	{
		datatype value = array [starting_index] ;
		int j = starting_index ;
		while ( j > 0 && value > array [j-1] )
		{
			array [j] = array [j-1] ;
			j-- ;
		}
		array [j] = value ;
		
		return insertionSort_decending ( array , starting_index + 1 , ending_index ) ;
	}
	
}

void swap ( int array[] , int a , int b )

{

	int temp = array [a] ;
	array [a] = array [b] ;
	array [b] = temp ;

}

void swap ( int a , int b )

{
	
	int temp = a ;
	a = b ;
	b = temp ;
	
}

