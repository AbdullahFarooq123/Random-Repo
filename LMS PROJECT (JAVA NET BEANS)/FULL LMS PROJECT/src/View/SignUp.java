package View;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Abdullah123
 */
import java.util.regex.Pattern;
import java.awt.*;
import java.awt.event.KeyEvent;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import Controller.BackEnd.UsersClass;
import Controller.BackEnd.ManagementClass;
import Controller.BackEnd.StudentClass;
import Controller.BackEnd.TeacherClass;
import Controller.BackEnd.DataClass;
import java.util.Arrays;
import javax.swing.JOptionPane;
@SuppressWarnings("serial")
public class SignUp extends javax.swing.JFrame {
    
    private int mouseX ;
    private int mouseY ;
    private boolean userNameIsCorrect=false;
    private boolean passwordIsCorrect=false;
    private boolean confirmPasswordIsCorrect=false;
    private boolean securityAnswerIsCorrect=false;
    private boolean fullNameIsCorrect=false;
    private boolean cnicIsCorrect=false;
    private boolean passwordShow=false;
    private boolean confirmationShow=false;
    private double redValue = 255 ;
    private double greenValue = 0 ;
    private UsersClass users ;
    private DataClass data;
    private String [] answers = new String[3];
    private javax.swing.Icon [] answersIcons=new javax.swing.ImageIcon[3];
    public SignUp(UsersClass users,DataClass data) {
        Arrays.fill(answersIcons, null);
        Arrays.fill(answers, "");
        this.users=users;
        this.data=data;
        LookAndFeel.lookAndFeel("Metal");
        initComponents();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        PasswordStrength = new javax.swing.JProgressBar();
        ShowConfirmPassword = new javax.swing.JButton();
        ShowPassword = new javax.swing.JButton();
        JobStatusError = new javax.swing.JLabel();
        SignUpError = new javax.swing.JLabel();
        CNICError = new javax.swing.JLabel();
        SecurityAnswerError = new javax.swing.JLabel();
        FullNameError = new javax.swing.JLabel();
        ConfirmPasswordError = new javax.swing.JLabel();
        UserNameError = new javax.swing.JLabel();
        PasswordError = new javax.swing.JLabel();
        Back = new javax.swing.JLabel();
        topPanel = new javax.swing.JLabel();
        UserName = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        Password = new javax.swing.JLabel();
        ConfirmPassword = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        confirmPassword = new javax.swing.JPasswordField();
        FullName = new javax.swing.JLabel();
        fullName = new javax.swing.JTextField();
        cnic = new javax.swing.JLabel();
        CNIC = new javax.swing.JFormattedTextField();
        JobStatus = new javax.swing.JLabel();
        jobStatus = new javax.swing.JComboBox<>();
        signUp = new javax.swing.JButton();
        securityQuestions = new javax.swing.JComboBox<>();
        securityAnswer = new javax.swing.JTextField();
        SecurityAnswers = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 102, 102)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PasswordStrength.setBackground(new java.awt.Color(255, 255, 255));
        PasswordStrength.setForeground(new java.awt.Color(51, 255, 51));
        PasswordStrength.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 255, 102)));
        jPanel1.add(PasswordStrength, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 160, 210, 10));
        PasswordStrength.setVisible(false);

        ShowConfirmPassword.setForeground(new java.awt.Color(255, 255, 255));
        ShowConfirmPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/closed eye.png"))); // NOI18N
        ShowConfirmPassword.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ShowConfirmPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ShowConfirmPasswordMouseClicked(evt);
            }
        });
        jPanel1.add(ShowConfirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, 20, 20));

        ShowPassword.setForeground(new java.awt.Color(255, 255, 255));
        ShowPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/closed eye.png"))); // NOI18N
        ShowPassword.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ShowPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ShowPasswordMouseClicked(evt);
            }
        });
        jPanel1.add(ShowPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 140, 20, 20));

        JobStatusError.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        JobStatusError.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(JobStatusError, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 310, 200, 20));

        SignUpError.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        SignUpError.setForeground(new java.awt.Color(255, 255, 51));
        SignUpError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(SignUpError, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 344, 670, 30));

        CNICError.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        CNICError.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(CNICError, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 280, 200, 20));

        SecurityAnswerError.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        SecurityAnswerError.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(SecurityAnswerError, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 250, 200, 20));

        FullNameError.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        FullNameError.setForeground(new java.awt.Color(255, 51, 51));
        jPanel1.add(FullNameError, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 200, 200, 20));

        ConfirmPasswordError.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        ConfirmPasswordError.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(ConfirmPasswordError, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 170, 200, 20));

        UserNameError.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        UserNameError.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(UserNameError, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 200, 20));

        PasswordError.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        PasswordError.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(PasswordError, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, 200, 20));

        Back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Back arrow.png"))); // NOI18N
        Back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BackMousePressed(evt);
            }
        });
        jPanel1.add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 40));

        topPanel.setBackground(new java.awt.Color(0, 102, 102));
        topPanel.setFont(new java.awt.Font("Segoe Print", 3, 18)); // NOI18N
        topPanel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        topPanel.setText("SIGNUP ");
        topPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        topPanel.setOpaque(true);
        topPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                topPanelMouseDragged(evt);
            }
        });
        topPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                topPanelMousePressed(evt);
            }
        });
        jPanel1.add(topPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 670, 40));

        UserName.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        UserName.setForeground(new java.awt.Color(153, 204, 255));
        UserName.setText("USER NAME ");
        jPanel1.add(UserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 80, -1));

        userName.setFont(new java.awt.Font("Segoe Print", 3, 9)); // NOI18N
        userName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userNameKeyPressed(evt);
            }
        });
        jPanel1.add(userName, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 210, 20));

        Password.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        Password.setForeground(new java.awt.Color(153, 255, 255));
        Password.setText("PASSWORD ");
        jPanel1.add(Password, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, -1, -1));

        ConfirmPassword.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        ConfirmPassword.setForeground(new java.awt.Color(153, 255, 255));
        ConfirmPassword.setText("CONFIRM PASSWORD ");
        jPanel1.add(ConfirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, -1, -1));

        password.setFont(new java.awt.Font("Segoe Print", 3, 9)); // NOI18N
        password.setEchoChar('*');
        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordKeyPressed(evt);
            }
        });
        jPanel1.add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 190, 20));

        confirmPassword.setFont(new java.awt.Font("Segoe Print", 3, 9)); // NOI18N
        confirmPassword.setEchoChar('*');
        confirmPassword.setFocusAccelerator('*');
        confirmPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                confirmPasswordKeyPressed(evt);
            }
        });
        jPanel1.add(confirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 190, 20));

        FullName.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        FullName.setText("FULL NAME ");
        jPanel1.add(FullName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, -1, -1));

        fullName.setFont(new java.awt.Font("Segoe Print", 3, 9)); // NOI18N
        fullName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fullNameKeyPressed(evt);
            }
        });
        jPanel1.add(fullName, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, 210, 20));

        cnic.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        cnic.setForeground(new java.awt.Color(153, 255, 255));
        cnic.setText("CNIC ");
        jPanel1.add(cnic, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, -1, -1));

        try {
            CNIC.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-#######-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        CNIC.setFont(new java.awt.Font("Segoe Print", 3, 9)); // NOI18N
        CNIC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CNICKeyPressed(evt);
            }
        });
        jPanel1.add(CNIC, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 280, 210, 20));

        JobStatus.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        JobStatus.setForeground(new java.awt.Color(153, 255, 255));
        JobStatus.setText("JOB-STATUS ");
        jPanel1.add(JobStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, -1, -1));

        jobStatus.setFont(new java.awt.Font("Segoe Print", 3, 9)); // NOI18N
        jobStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Management", "Teacher", "Student" }));
        jobStatus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jobStatus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jobStatusMouseClicked(evt);
            }
        });
        jPanel1.add(jobStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 210, 20));

        signUp.setBackground(new java.awt.Color(0, 102, 102));
        signUp.setFont(new java.awt.Font("Segoe Print", 3, 18)); // NOI18N
        signUp.setText("SIGNUP ");
        signUp.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        signUp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        signUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signUpMouseClicked(evt);
            }
        });
        jPanel1.add(signUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 380, -1, -1));

        securityQuestions.setFont(new java.awt.Font("Segoe Print", 3, 9)); // NOI18N
        securityQuestions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "What was your childhood nickname?", "What was your school name?", "In which city, you were born?" }));
        securityQuestions.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        securityQuestions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                securityQuestionsActionPerformed(evt);
            }
        });
        jPanel1.add(securityQuestions, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, 210, 20));

        securityAnswer.setFont(new java.awt.Font("Segoe Print", 3, 9)); // NOI18N
        securityAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                securityAnswerActionPerformed(evt);
            }
        });
        securityAnswer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                securityAnswerKeyPressed(evt);
            }
        });
        jPanel1.add(securityAnswer, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 210, 20));

        SecurityAnswers.setFont(new java.awt.Font("Segoe Print", 3, 11)); // NOI18N
        SecurityAnswers.setText("SECURITY ANSWERS ");
        jPanel1.add(SecurityAnswers, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, -1, -1));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Signup.jpg"))); // NOI18N
        Background.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 102, 102)));
        jPanel1.add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 670, 430));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void userNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameKeyPressed
        if(evt.getKeyCode()>=33&&evt.getKeyCode()<=126||evt.getKeyCode()==8){
            setToInitials(1);
            userNameIsCorrect=JTextFieldFormat(true,userName,evt,"",UserNameError,password,null,1,"Cannot be less than 8 char.!",false,true,8);
        }
    }//GEN-LAST:event_userNameKeyPressed

    private void topPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topPanelMouseDragged
        int XCoordinate=evt.getXOnScreen();
        int YCoordinate=evt.getYOnScreen();
        this.setLocation(XCoordinate-mouseX,YCoordinate-mouseY);
    }//GEN-LAST:event_topPanelMouseDragged

    private void topPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topPanelMousePressed
        mouseX=evt.getX();
        mouseY=evt.getY();
    }//GEN-LAST:event_topPanelMousePressed

    private void BackMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackMousePressed
        this.dispose();
        new Menu(users,data);
    }//GEN-LAST:event_BackMousePressed

    private void passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyPressed
        for(String userName : users.getUsers().keySet()){
                if(this.userName.getText().equals(userName)){
                    userNameIsCorrect=false;
                    JOptionPane.showMessageDialog(this, "UserName already exists!");
                    break;
                }
            }
        PasswordStrength.setVisible(true);
        if(keyCheck(evt)){
            setToInitials(2);
            passwordIsCorrect=JTextFieldFormat(userNameIsCorrect,password,evt,"",PasswordError,confirmPassword,null,2,"",true,false,0);
        }
    }//GEN-LAST:event_passwordKeyPressed

    @SuppressWarnings("deprecation")
    private void confirmPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmPasswordKeyPressed
        if(keyCheck(evt)){
            setToInitials(3);
            confirmPasswordIsCorrect=JTextFieldFormat(passwordIsCorrect,confirmPassword,evt,password.getText(),ConfirmPasswordError,fullName,null,2,"No match with password!",false,false,0);
        }
    }//GEN-LAST:event_confirmPasswordKeyPressed

    private void fullNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fullNameKeyPressed
       if(keyCheck(evt)){
            setToInitials(4);
            fullNameIsCorrect=JTextFieldFormat(confirmPasswordIsCorrect,fullName,evt,"",FullNameError,securityAnswer,securityQuestions,3,"Cannot be less than 3 characters!",false,true,3);
        }
    }//GEN-LAST:event_fullNameKeyPressed

    private void securityAnswerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_securityAnswerKeyPressed
        for(UsersClass user : users.getUsers().values()){
            if(user.getName().equals(fullName.getText())){
                fullNameIsCorrect=false;
                JOptionPane.showMessageDialog(this, "Name already exists!");
            }
        }
        if(keyCheck(evt)){
            setToInitials(5);
            securityAnswerIsCorrect=JTextFieldFormat(fullNameIsCorrect,securityAnswer,evt,"",SecurityAnswerError,CNIC,null,4,"Please enter a correct answer!",false,true,3);
       }
    }//GEN-LAST:event_securityAnswerKeyPressed

    private void CNICKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CNICKeyPressed
        for (String ans : answers){
            if (ans.isBlank())
                securityAnswerIsCorrect=false;
        }
        if(evt.getKeyChar()>='0'&&evt.getKeyChar()<='9'||evt.getKeyCode()==8){
                setToInitials(6);
                if(securityAnswerIsCorrect){
                String[] a = CNIC.getText().split("-");
                String b ="";
                for(String value : a){
                    b+=value;
                }
                String[] c =b.split(" ");
                String text="";
                for(String value:c){
                    text+=value;
                }
                if(evt.getKeyCode()==8){
                    char[]array=text.toCharArray ();
                    char []replaced= new char[array.length-2];
                    System.arraycopy ( array , 0 , replaced , 0 , array.length - 2 );
                    text= new String ( replaced );
                }
                if(text.length()<13)
                    text+=evt.getKeyChar();
                if(evt.getKeyCode()==8){
                    char[]array=text.toCharArray ();
                    char []replaced= new char[array.length-2];
                    System.arraycopy ( array , 0 , replaced , 0 , array.length - 2 );
                    text= new String ( replaced );
                }
                if(text.length()==13){
                    CNICError.setText("");
                    CNICError.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tick.png")));
                    cnicIsCorrect=true;
                }
                else if (text.isBlank()){
                    CNICError.setText("");
                    CNICError.setIcon(null);
                    cnicIsCorrect=false;
                }
                else {
                    CNICError.setIcon(null);
                    CNICError.setText("*Cannot be less than 13 char.!");
                    cnicIsCorrect=false;
                }
                if(!jobStatus.isEnabled()){
                    jobStatus.setEnabled(true);
                }
            }
            else{
            CNIC.setEnabled(false);
            CNICError.setText("*Correct above field!");
        }
       }
        else{
            String cniC=CNIC.getText()+evt.getKeyChar();
            if(cniC.charAt(cniC.length()-1)==evt.getKeyChar()){
                String[] array=cniC.split(Character.toString(evt.getKeyChar()));
                CNIC.setText(array[0]);
            }
        }
    }//GEN-LAST:event_CNICKeyPressed

    private void jobStatusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jobStatusMouseClicked
        setToInitials(9);
        if(!cnicIsCorrect){
            jobStatus.setEnabled(false);
            JobStatusError.setText("*Correct above field!");
        }               
    }//GEN-LAST:event_jobStatusMouseClicked

    @SuppressWarnings("deprecation")
    private void signUpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signUpMouseClicked
        if(!userNameIsCorrect){
            SignUpError.setText("*Please correct user name!");
        }
        else if(!passwordIsCorrect){
            SignUpError.setText("*Please correct password!");
        }
        else if(!confirmPasswordIsCorrect){
            SignUpError.setText("*Please correct confirm password field!");
        }
        else if(!securityAnswerIsCorrect||answers.length<3){
            SignUpError.setText("*Please correct security answer!");
        }
        else if(!fullNameIsCorrect){
            SignUpError.setText("*Please correct full name field!");
        }
        else if(!cnicIsCorrect){
            SignUpError.setText("*Please correct cnic field!");
        }
        else{
            if(jobStatus.getSelectedItem().toString().equals("Management"))
            users.addUser(users.signUp(userName.getText(),password.getText(),answers[0],answers[1],answers[2]),new ManagementClass(jobStatus.getSelectedItem().toString(),fullName.getText(), CNIC.getText(), data));
            else if(jobStatus.getSelectedItem().toString().equals("Teacher"))
            users.addUser(users.signUp(userName.getText(),password.getText(),answers[0],answers[1],answers[2]),new TeacherClass(jobStatus.getSelectedItem().toString(),fullName.getText(), CNIC.getText(), data));
            if(jobStatus.getSelectedItem().toString().equals("Student"))
            users.addUser(users.signUp(userName.getText(),password.getText(),answers[0],answers[1],answers[2]),new StudentClass(jobStatus.getSelectedItem().toString(),fullName.getText(), CNIC.getText(), data));
            this.dispose();
            new Menu(users,data);
        }
    }//GEN-LAST:event_signUpMouseClicked

    private void ShowPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShowPasswordMouseClicked
        passwordShow=hidePassword(passwordShow,ShowPassword,password);
    }//GEN-LAST:event_ShowPasswordMouseClicked

    private void ShowConfirmPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShowConfirmPasswordMouseClicked
        confirmationShow=hidePassword(confirmationShow,ShowConfirmPassword,confirmPassword);
    }//GEN-LAST:event_ShowConfirmPasswordMouseClicked

    private void securityQuestionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_securityQuestionsActionPerformed
        for(UsersClass user : users.getUsers().values()){
            if(user.getName().equals(fullName.getText())){
                fullNameIsCorrect=false;
                JOptionPane.showMessageDialog(this, "Name already exists!");
            }
        }
        securityAnswer.setText(answers[securityQuestions.getSelectedIndex()]);
        SecurityAnswerError.setIcon(answersIcons[securityQuestions.getSelectedIndex()]);
        setToInitials(8);
        if(fullNameIsCorrect){
            if(!CNIC.isEnabled()){
                CNIC.setEnabled(true);
                CNIC.setText("");
            }
        }
        else{
            securityQuestions.setEnabled(false);
            securityAnswer.setEnabled(false);
            SecurityAnswerError.setText("*Correct above field!");
        }
    }//GEN-LAST:event_securityQuestionsActionPerformed

    private void securityAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_securityAnswerActionPerformed
        if(!securityAnswer.getText().isBlank()){
            answers[securityQuestions.getSelectedIndex()]=securityAnswer.getText();
            answersIcons[securityQuestions.getSelectedIndex()]=SecurityAnswerError.getIcon();
        }
    }//GEN-LAST:event_securityAnswerActionPerformed
private boolean keyCheck(java.awt.event.KeyEvent evt){
        if((evt.getKeyCode()>=44&&evt.getKeyCode()<=57)||(evt.getKeyCode()==59)||(evt.getKeyCode()>=65&&evt.getKeyCode()<=93)||(evt.getKeyCode()>=96&&evt.getKeyCode()<=107)||evt.getKeyCode()==192||evt.getKeyCode()==127||evt.getKeyCode()==222||evt.getKeyCode()==8){
            if(!evt.isAltDown()&&!evt.isActionKey())
                return true ;
            else
                return false;
        }
        else
            return false;
    }
    
    private boolean JTextFieldFormat(boolean previousIsCorrect,JTextField textField,KeyEvent evt,String compareTo,JLabel errorField,JTextField enableAField,javax.swing.JComboBox box,int fieldNo,String error,boolean isPasswordField,boolean compare,int value){
        boolean fieldIsCorrect=false;
        if(previousIsCorrect){
            String text ;
            if(!evt.isControlDown())
                text= textField.getText()+evt.getKeyChar();           
            else
                text=textField.getText();
            if(!textField.getText().isBlank())
                if(evt.getKeyCode()==8){
                    char[]array=text.toCharArray ();
                    char []replaced= new char[array.length-2];
                    System.arraycopy ( array , 0 , replaced , 0 , array.length - 2 );
                    text= new String ( replaced );
                }
            int strength=0;
            if(isPasswordField){
                strength= passwordStrength(text);
            }
            if(!isPasswordField?(compare?text.length()>=value:text.equals (compareTo)):(strength+text.length()>=68)){
                errorField.setText("");
                errorField.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tick.png")));
                fieldIsCorrect=true;
            }
            else if(text.isBlank()){
                errorField.setIcon(null);
                errorField.setText("");
                fieldIsCorrect=false;
            }
            else {
                errorField.setIcon(null);
                if(!isPasswordField)
                    errorField.setText("*"+error);
                else
                    SignUpError.setText("*Combine upper case,number and special character!");
                fieldIsCorrect=false;
            }
            if(enableAField!=null){
                if(box==null){
                    if(!enableAField.isEnabled())
                        enableAField.setEnabled(true);
                }
                else{
                    if(!enableAField.isEnabled())
                        enableAField.setEnabled(true);
                    if(!box.isEnabled())
                        box.setEnabled(true);
                }
            }
            if(isPasswordField){
                double percentage = (strength*0.1/20)+text.length();
                redValue=clampValue(0,255,((redValue*100/255)-percentage)*255/100);
                greenValue=clampValue(0,255,((greenValue*100/255)+percentage)*255/100);
                PasswordStrength.setValue(strength+text.length());
                PasswordStrength.setForeground(new Color((int)redValue,(int)greenValue,0));
                PasswordStrength.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new Color((int)redValue,(int)greenValue,0)));
            }
        }
        else
            if(fieldNo!=1){
                textField.setEnabled(false);
                errorField.setText("*Correct above field!"); 
            }
        return fieldIsCorrect;
    }

    @SuppressWarnings("fallthrough")
    private void setToInitials(int value){
    switch(value){
        case 1:
            password.setText("");
            PasswordError.setText("");
            PasswordError.setIcon(null);
            passwordIsCorrect=false;
        case 2:
            confirmPassword.setText("");
            ConfirmPasswordError.setText("");
            ConfirmPasswordError.setIcon(null);
            confirmPasswordIsCorrect=false;
        case 3:
            fullName.setText("");
            FullNameError.setText("");
            FullNameError.setIcon(null);
            fullNameIsCorrect=false;
        case 4:
            securityAnswer.setText("");
            SecurityAnswerError.setIcon(null);
            SecurityAnswerError.setText("");
            securityAnswerIsCorrect=false;
        case 5:
        case 7:
        case 8:
            CNIC.setText("");
            CNICError.setText("");
            CNICError.setIcon(null);
            cnicIsCorrect=false;
            JobStatusError.setText("");
            break;
        case 6:
            JobStatusError.setText("");
    }
    switch(value){
        case 9:
            CNICError.setText("");
        case 6:
            SecurityAnswerError.setText("");
        case 5:
        case 8:
        case 7:
            FullNameError.setText("");
        case 4:
            ConfirmPasswordError.setText("");
        case 3:
            PasswordError.setText("");
            PasswordStrength.setVisible(false);
            redValue=255;
            greenValue=0;
            PasswordStrength.setForeground(new Color((int)redValue,(int)greenValue,0));
            PasswordStrength.setValue(0);
        case 2:
            UserNameError.setText("");
            break;
        case 1:
            redValue=255;
            greenValue=0;
            PasswordStrength.setForeground(new Color((int)redValue,(int)greenValue,0));
            PasswordStrength.setValue(0);
    }
    SignUpError.setText("");
}

private boolean hidePassword(boolean show,JButton showButton,JPasswordField passwordField){
    show=!show;
    if(!show){
        showButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/closed eye.png")));
        passwordField.setEchoChar('*');
    }
    else{
        showButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/eye.png")));
        passwordField.setEchoChar((char)0);
    }
    return show;
}

private double clampValue(int min,int max,double variable){
    if(variable>=max)
        variable=max;
    else if(variable<=min)
        variable=min;
    return variable;
}

private int passwordStrength(String text){
    int MeasureStrength=0;
    Pattern upperCase = Pattern.compile("[A-Z ]", Pattern.CASE_INSENSITIVE);
    Pattern number = Pattern.compile("[0-9 ]", Pattern.CASE_INSENSITIVE);
    Pattern specialCharacter = Pattern.compile("[`~!@#$%&*()_\\-\\^\\+=\\[\\]|;:'/?.>,< ]", Pattern.CASE_INSENSITIVE);
    if(upperCase.matcher(text).find()){
        MeasureStrength++;
    }
    if(number.matcher(text).find()){
        MeasureStrength++;
    }
    if(specialCharacter.matcher(text).find()){
        MeasureStrength++;
    }
    return MeasureStrength*20;
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Back;
    private javax.swing.JLabel Background;
    private javax.swing.JFormattedTextField CNIC;
    private javax.swing.JLabel CNICError;
    private javax.swing.JLabel ConfirmPassword;
    private javax.swing.JLabel ConfirmPasswordError;
    private javax.swing.JLabel FullName;
    private javax.swing.JLabel FullNameError;
    private javax.swing.JLabel JobStatus;
    private javax.swing.JLabel JobStatusError;
    private javax.swing.JLabel Password;
    private javax.swing.JLabel PasswordError;
    private javax.swing.JProgressBar PasswordStrength;
    private javax.swing.JLabel SecurityAnswerError;
    private javax.swing.JLabel SecurityAnswers;
    private javax.swing.JButton ShowConfirmPassword;
    private javax.swing.JButton ShowPassword;
    private javax.swing.JLabel SignUpError;
    private javax.swing.JLabel UserName;
    private javax.swing.JLabel UserNameError;
    private javax.swing.JLabel cnic;
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JTextField fullName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> jobStatus;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField securityAnswer;
    private javax.swing.JComboBox<String> securityQuestions;
    private javax.swing.JButton signUp;
    private javax.swing.JLabel topPanel;
    private javax.swing.JTextField userName;
    // End of variables declaration//GEN-END:variables
}
